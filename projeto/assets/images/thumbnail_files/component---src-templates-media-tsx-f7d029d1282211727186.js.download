(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"0x3a":function(e,t,a){e.exports={mediaGalleryGrid:"MediaGalleryGrid-module--mediaGalleryGrid--1wIvt",logoWrapper:"MediaGalleryGrid-module--logoWrapper--2oVcf",logo:"MediaGalleryGrid-module--logo--32pOf",gridArea:"MediaGalleryGrid-module--gridArea--17c-a",media:"MediaGalleryGrid-module--media--2YaZr",cardIn:"MediaGalleryGrid-module--cardIn--exQSZ",mediaCard:"MediaGalleryGrid-module--mediaCard--2chuE",blankSpace:"MediaGalleryGrid-module--blankSpace--tJ0ZB",notFound:"MediaGalleryGrid-module--notFound--3oHI1",icon:"MediaGalleryGrid-module--icon--2ay3-"}},"7eDL":function(e,t,a){e.exports={filterOptions:"FilterOptions-module--filterOptions--1CsaB",filtersWrapper:"FilterOptions-module--filtersWrapper--3SicK",filterOption:"FilterOptions-module--filterOption--3t598",selected:"FilterOptions-module--selected--2UB8A",animateSelection:"FilterOptions-module--animateSelection--2CUcS"}},"8kPk":function(e,t,a){"use strict";var o=a("q1tI"),n=a.n(o),l=a("BhN1"),i=function(e,t){t&&!e.classList.contains(t)&&e.classList.add(t)},r=a("5GZ/"),d=a("KDis"),s=a("F4pK"),c=a.n(s),u="object"==typeof window?window.pageYOffset:0;t.a=function(e){var t=e.children,a=e.includeCloseButton,s=void 0===a||a,m=e.type,p=void 0===m?d.a.VIDEO:m,h=e.testId,v=Object(l.a)(),f=v[0].modalActiveState,g=v[1].setModalActiveState,b=Object(o.useState)(f),y=b[0],E=b[1];Object(o.useEffect)((function(){var e=f?window.pageYOffset:u;f&&(u=window.pageYOffset),f!==y&&(!function(e,t){var a,o;e?(i(document.body,"noscroll"),document.body.style.top="-"+t+"px"):(document.documentElement.style.scrollBehavior="initial",a=document.body,o="noscroll",a.classList.contains(o)&&a.classList.remove(o),document.body.style.top="0px",window.scroll({top:t-1}),document.documentElement.style.scrollBehavior="smooth")}(f,e),E(f))}),[f]);return f?n.a.createElement("div",{className:c.a.modal+" "+c.a[p],"data-testid":h},t&&t,s&&n.a.createElement(r.a,{className:c.a.closeButton,onClick:function(){g(!1)},icon:"Close",testId:h+"-button-close"})):null}},F4pK:function(e,t,a){e.exports={modal:"Modal-module--modal--qb2zN",video:"Modal-module--video--1eC5L",content:"Modal-module--content--2mhvh",media:"Modal-module--media--sHcTl",closeButton:"Modal-module--closeButton--1n5Gr"}},GgLZ:function(e,t,a){"use strict";var o=a("q1tI"),n=a.n(o),l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)};var i=function(){return(i=Object.assign||function(e){for(var t,a=1,o=arguments.length;a<o;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};var r="Pixel",d="Percent",s={unit:d,value:.8};function c(e){return"number"==typeof e?{unit:d,value:100*e}:"string"==typeof e?e.match(/^(\d*(\.\d+)?)px$/)?{unit:r,value:parseFloat(e)}:e.match(/^(\d*(\.\d+)?)%$/)?{unit:d,value:parseFloat(e)}:(console.warn('scrollThreshold format is invalid. Valid formats: "120px", "50%"...'),s):(console.warn("scrollThreshold should be string or number"),s)}var u=function(e){function t(t){var a=e.call(this,t)||this;return a.lastScrollTop=0,a.actionTriggered=!1,a.startY=0,a.currentY=0,a.dragging=!1,a.maxPullDownDistance=0,a.getScrollableTarget=function(){return a.props.scrollableTarget instanceof HTMLElement?a.props.scrollableTarget:"string"==typeof a.props.scrollableTarget?document.getElementById(a.props.scrollableTarget):(null===a.props.scrollableTarget&&console.warn("You are trying to pass scrollableTarget but it is null. This might\n        happen because the element may not have been added to DOM yet.\n        See https://github.com/ankeetmaini/react-infinite-scroll-component/issues/59 for more info.\n      "),null)},a.onStart=function(e){a.lastScrollTop||(a.dragging=!0,e instanceof MouseEvent?a.startY=e.pageY:e instanceof TouchEvent&&(a.startY=e.touches[0].pageY),a.currentY=a.startY,a._infScroll&&(a._infScroll.style.willChange="transform",a._infScroll.style.transition="transform 0.2s cubic-bezier(0,0,0.31,1)"))},a.onMove=function(e){a.dragging&&(e instanceof MouseEvent?a.currentY=e.pageY:e instanceof TouchEvent&&(a.currentY=e.touches[0].pageY),a.currentY<a.startY||(a.currentY-a.startY>=Number(a.props.pullDownToRefreshThreshold)&&a.setState({pullToRefreshThresholdBreached:!0}),a.currentY-a.startY>1.5*a.maxPullDownDistance||a._infScroll&&(a._infScroll.style.overflow="visible",a._infScroll.style.transform="translate3d(0px, "+(a.currentY-a.startY)+"px, 0px)")))},a.onEnd=function(){a.startY=0,a.currentY=0,a.dragging=!1,a.state.pullToRefreshThresholdBreached&&(a.props.refreshFunction&&a.props.refreshFunction(),a.setState({pullToRefreshThresholdBreached:!1})),requestAnimationFrame((function(){a._infScroll&&(a._infScroll.style.overflow="auto",a._infScroll.style.transform="none",a._infScroll.style.willChange="none")}))},a.onScrollListener=function(e){"function"==typeof a.props.onScroll&&setTimeout((function(){return a.props.onScroll&&a.props.onScroll(e)}),0);var t=a.props.height||a._scrollableNode?e.target:document.documentElement.scrollTop?document.documentElement:document.body;a.actionTriggered||((a.props.inverse?a.isElementAtTop(t,a.props.scrollThreshold):a.isElementAtBottom(t,a.props.scrollThreshold))&&a.props.hasMore&&(a.actionTriggered=!0,a.setState({showLoader:!0}),a.props.next&&a.props.next()),a.lastScrollTop=t.scrollTop)},a.state={showLoader:!1,pullToRefreshThresholdBreached:!1},a.throttledOnScrollListener=function(e,t,a,o){var n,l=!1,i=0;function r(){n&&clearTimeout(n)}function d(){var d=this,s=Date.now()-i,c=arguments;function u(){i=Date.now(),a.apply(d,c)}function m(){n=void 0}l||(o&&!n&&u(),r(),void 0===o&&s>e?u():!0!==t&&(n=setTimeout(o?m:u,void 0===o?e-s:e)))}return"boolean"!=typeof t&&(o=a,a=t,t=void 0),d.cancel=function(){r(),l=!0},d}(150,a.onScrollListener).bind(a),a.onStart=a.onStart.bind(a),a.onMove=a.onMove.bind(a),a.onEnd=a.onEnd.bind(a),a}return function(e,t){function a(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}(t,e),t.prototype.componentDidMount=function(){if(void 0===this.props.dataLength)throw new Error('mandatory prop "dataLength" is missing. The prop is needed when loading more content. Check README.md for usage');if(this._scrollableNode=this.getScrollableTarget(),this.el=this.props.height?this._infScroll:this._scrollableNode||window,this.el&&this.el.addEventListener("scroll",this.throttledOnScrollListener),"number"==typeof this.props.initialScrollY&&this.el&&this.el instanceof HTMLElement&&this.el.scrollHeight>this.props.initialScrollY&&this.el.scrollTo(0,this.props.initialScrollY),this.props.pullDownToRefresh&&this.el&&(this.el.addEventListener("touchstart",this.onStart),this.el.addEventListener("touchmove",this.onMove),this.el.addEventListener("touchend",this.onEnd),this.el.addEventListener("mousedown",this.onStart),this.el.addEventListener("mousemove",this.onMove),this.el.addEventListener("mouseup",this.onEnd),this.maxPullDownDistance=this._pullDown&&this._pullDown.firstChild&&this._pullDown.firstChild.getBoundingClientRect().height||0,this.forceUpdate(),"function"!=typeof this.props.refreshFunction))throw new Error('Mandatory prop "refreshFunction" missing.\n          Pull Down To Refresh functionality will not work\n          as expected. Check README.md for usage\'')},t.prototype.componentWillUnmount=function(){this.el&&(this.el.removeEventListener("scroll",this.throttledOnScrollListener),this.props.pullDownToRefresh&&(this.el.removeEventListener("touchstart",this.onStart),this.el.removeEventListener("touchmove",this.onMove),this.el.removeEventListener("touchend",this.onEnd),this.el.removeEventListener("mousedown",this.onStart),this.el.removeEventListener("mousemove",this.onMove),this.el.removeEventListener("mouseup",this.onEnd)))},t.prototype.UNSAFE_componentWillReceiveProps=function(e){this.props.dataLength!==e.dataLength&&(this.actionTriggered=!1,this.setState({showLoader:!1}))},t.prototype.isElementAtTop=function(e,t){void 0===t&&(t=.8);var a=e===document.body||e===document.documentElement?window.screen.availHeight:e.clientHeight,o=c(t);return o.unit===r?e.scrollTop<=o.value+a-e.scrollHeight+1||0===e.scrollTop:e.scrollTop<=o.value/100+a-e.scrollHeight+1||0===e.scrollTop},t.prototype.isElementAtBottom=function(e,t){void 0===t&&(t=.8);var a=e===document.body||e===document.documentElement?window.screen.availHeight:e.clientHeight,o=c(t);return o.unit===r?e.scrollTop+a>=e.scrollHeight-o.value:e.scrollTop+a>=o.value/100*e.scrollHeight},t.prototype.render=function(){var e=this,t=i({height:this.props.height||"auto",overflow:"auto",WebkitOverflowScrolling:"touch"},this.props.style),a=this.props.hasChildren||!!(this.props.children&&this.props.children instanceof Array&&this.props.children.length),o=this.props.pullDownToRefresh&&this.props.height?{overflow:"auto"}:{};return n.a.createElement("div",{style:o,className:"infinite-scroll-component__outerdiv"},n.a.createElement("div",{className:"infinite-scroll-component "+(this.props.className||""),ref:function(t){return e._infScroll=t},style:t},this.props.pullDownToRefresh&&n.a.createElement("div",{style:{position:"relative"},ref:function(t){return e._pullDown=t}},n.a.createElement("div",{style:{position:"absolute",left:0,right:0,top:-1*this.maxPullDownDistance}},this.state.pullToRefreshThresholdBreached?this.props.releaseToRefreshContent:this.props.pullDownToRefreshContent)),this.props.children,!this.state.showLoader&&!a&&this.props.hasMore&&this.props.loader,this.state.showLoader&&this.props.hasMore&&this.props.loader,!this.props.hasMore&&this.props.endMessage))},t}(o.Component);t.a=u},KDis:function(e,t,a){"use strict";var o;!function(e){e.VIDEO="video",e.CONTENT="content",e.MEDIA="media"}(o||(o={})),t.a=o},Qj0e:function(e,t,a){e.exports={youtubeVideo:"YoutubeVideo-module--youtubeVideo--3Go8c"}},S8Qq:function(e,t,a){e.exports={mediaGallery:"MediaGalleryFilter-module--mediaGallery--2YSmW",mediaFilter:"MediaGalleryFilter-module--mediaFilter--1YTQ1",tagContainer:"MediaGalleryFilter-module--tagContainer--2iyZY",dropdown:"MediaGalleryFilter-module--dropdown--2CxcY",disabled:"MediaGalleryFilter-module--disabled--1mIBP"}},SqZR:function(e,t,a){"use strict";a.r(t);var o,n=a("q1tI"),l=a.n(n),i=(a("E9XD"),a("KQm4")),r=a("IYFH"),d=a("7eDL"),s=a.n(d),c=function(e){var t=e.filters,a=e.value,o=e.onChange,n=e.testId;return l.a.createElement("div",{className:s.a.filterOptions},l.a.createElement("ul",{className:s.a.filtersWrapper},t.map((function(e,t){var i=e.id,r=e.title;return l.a.createElement("li",{key:"key-filter-"+t,className:"heading-08 bold "+s.a.filterOption+" "+(i===a?s.a.selected:""),"data-filter":i,onClick:function(){return o(i)},"data-testid":n+"-"+(t+1)},r)}))))},u=a("KRf5"),m=a("S8Qq"),p=a.n(m),h=function(e){var t=e.tags,a=e.categories,o=e.onCategorySelect,d=e.onTagParentSelect,s=e.onTagChildSelect,m=e.selectedTag,h=e.selectedTagValue,v=e.selectedCategory,f=e.testId,g=Object(n.useState)(-1),b=g[0],y=g[1],E=Object(r.b)().t.get("media")||{},w=E.categoryAll,S=E.dropdownAll,M=E.dropdownSelect,C=t.reduce((function(e,t){return[].concat(Object(i.a)(e),Object(i.a)(t.parent_tags.reduce((function(e,t){return[].concat(Object(i.a)(e),[{id:t.machine_name,title:t.title}])}),[])))}),[{id:"all",title:S}]),_=void 0===m||"all"===m?[{id:"all",title:S}]:t.reduce((function(e,t){return[].concat(Object(i.a)(e),Object(i.a)(void 0!==t.parent_tags.find((function(e){return e.machine_name===m}))?t.dropdown_tags.map((function(e){return{id:e.machine_name,title:e.title}})):[]))}),[{id:"all",title:S}]),T=Object(n.useCallback)((function(e){y(e===b?-1:e)}),[b]),N=Object(n.useCallback)((function(){y(-1)}),[]);return l.a.createElement("section",{className:"section light "+p.a.mediaGallery,"data-testid":f},l.a.createElement("div",{className:"sectionWrapper"},l.a.createElement("div",{className:p.a.mediaFilter},l.a.createElement(c,{filters:[{id:"all",title:w}].concat(Object(i.a)(a.map((function(e){return{id:e.machine_name,title:e.title}})))),value:v||"all",onChange:o,testId:"mediapage-filter-option"}),l.a.createElement("div",{className:p.a.tagContainer},l.a.createElement(u.a,{className:p.a.dropdown+" "+(1===b?p.a.disabled:""),onChange:d,onMenuClick:function(){return T(0)},onOptionSelect:N,options:C,placeholder:M,value:m||"all",testId:"mediapage-filter-dropdown-1"}),l.a.createElement(u.a,{className:p.a.dropdown+" "+("all"===m||0===b?p.a.disabled:""),onChange:s,onMenuClick:function(){return T(1)},onOptionSelect:N,options:_,placeholder:M,value:h||"all",testId:"mediapage-filter-dropdown-2"})))))},v=a("GgLZ"),f={screenshots:"screenshot",comics:"comics",artwork:"officialArtwork",wallpapers:"wallpaper",videos:"video",logos:"logos",content_creators:"contentCreators"},g=["Break","Heal","Rocketlauncher"],b=a("N1uy"),y=a("ahjx"),E=a("c6d8"),w=a.n(E),S=function(e){var t,a=e.className,o=e.testId,n=e.mediaContent,i=n.title,r=n.media_category[0].machine_name,d=n.media_thumbnail,s=d.focal_point_x,c=d.focal_point_y,u=d.media_thumbnail.url,m=e.onClick;return l.a.createElement("div",{className:w.a.mediaCard+" "+(a&&a),onClick:m,"data-testid":o},l.a.createElement("span",{className:w.a.image,style:{backgroundImage:"url("+u+"?format=jpg&auto=webp)",backgroundPosition:Math.floor(100*s)+"% "+Math.floor(100*c)+"%"},"data-testid":o+"-image"}),l.a.createElement("div",{className:w.a.titleWrapper},l.a.createElement(y.a,{className:w.a.icon,name:(t=f[r]||"all",t?t.substr(0,1).toUpperCase()+t.substr(1):t),"data-testid":o+"-icon"}),l.a.createElement("span",{className:"heading-06 "+w.a.titleCopy,"data-testid":o+"-title"},i)))},M=a("0x3a"),C=a.n(M);!function(e){e[e.small=0]="small",e[e.vertical=1]="vertical",e[e.large=2]="large"}(o||(o={}));var _=g.length,T=function(e){var t=e.media,a=e.handleCardClick,d=Object(r.b)().t.get("general").noElements,s=Object(n.useState)([]),c=s[0],u=s[1];return Object(n.useEffect)((function(){var e=t.slice(0,3).map((function(e){return{card:e,itemSize:o[Math.floor(3*Math.random())]}}));u(Object(i.a)(e))}),[t]),l.a.createElement("div",{className:C.a.mediaGalleryGrid},l.a.createElement(b.a,{className:""+C.a.logoWrapper,speed:-10,minY:0},l.a.createElement(y.a,{className:""+C.a.logo,name:"Logo"})),t.length>0?l.a.createElement(v.a,{dataLength:c.length,next:function(){c.length>=t.length||setTimeout((function(){var e=c.length,a=t.slice(e,e+3).map((function(e){return{card:e,itemSize:o[Math.floor(3*Math.random())]}}));u([].concat(Object(i.a)(c),Object(i.a)(a)))}),100)},hasMore:c.length<t.length,loader:l.a.createElement("span",{className:C.a.loader}),scrollThreshold:.3},c.map((function(e,t){var o=e.card,n=e.itemSize;return l.a.createElement(l.a.Fragment,{key:"key-media-card-"+o.id},l.a.createElement("div",{className:C.a.gridArea+" "+C.a.media,"data-media-size":n,"data-transition-index":t%3,style:{animationDelay:t%3*.1+.3+"s"}},l.a.createElement(S,{className:""+C.a.mediaCard,mediaContent:o,onClick:function(){return a(o)},testId:"mediapage-gallery-card-"+(t+1)})),t%_==0?t/_<_&&l.a.createElement("div",{key:"key-media-blank-"+g[t/_%(_+1)]+"-"+t,className:C.a.gridArea+" "+C.a.blankSpace+" blank-position-"+(t/_+1),"data-icon":g[t/_%(_+1)]},l.a.createElement(y.a,{className:C.a.icon,name:g[t/_%(_+1)]})):null)}))):l.a.createElement("h1",{className:"heading-02 "+C.a.notFound},d))},N=Object(n.memo)(T),O=a("vDqi"),k=a.n(O),j=a("zuWl"),x=a.n(j),B=a("X9ND"),L=a("q6oC"),G=a("hIM4"),D=a("TPT9"),A=a("5GZ/"),Y=a("YU3G"),I=a("BhN1"),F=a("5LMY"),W=a("nA08"),R=a.n(W),P=function(e){var t=e.mp4,a=e.webm,o=e.poster,i=e.className,r=void 0===i?"":i,d=e.active,s=void 0!==d&&d,c=e.playButton,u=void 0===c||c,m=Object(I.a)()[0].modalActiveState,p=Object(n.useRef)(null),h=Object(n.useRef)(null),v=Object(n.useState)(!0),f=v[0],g=v[1];Object(n.useEffect)((function(){p.current&&(u||s&&m&&p.current.play(),s&&m||(g(!0),p.current.pause(),p.current.currentTime=0))}),[s,m]);var b=function(){var e=p.current;if(e&&e.videoWidth>0){e.style.width="100%",e.style.height="100%";var t=e.videoWidth,a=e.videoHeight,o=e.offsetWidth,n=e.offsetHeight;o/n>t/a?(e.style.width=o+"px",e.style.height=o*(a/t)+"px"):(e.style.width=n*(t/a)+"px",e.style.height=n+"px")}};return Object(F.b)()&&Object(L.a)(b),l.a.createElement("div",{className:r+" "+R.a.mediaSliderVideo},(t||a)&&l.a.createElement(l.a.Fragment,null,l.a.createElement("video",{ref:p,preload:"true",playsInline:!0,muted:!u,loop:!u,controls:!f,poster:o,onLoadedMetadata:function(){Object(F.b)()&&b()}},t&&l.a.createElement("source",{src:t,type:"video/mp4"}),a&&l.a.createElement("source",{src:a,type:"video/webm"})),u&&f&&l.a.createElement("div",{className:"button "+R.a.playButton},l.a.createElement(A.a,{onClick:function(){p.current&&s&&m&&(p.current.play(),g(!1))},className:R.a.iconWrapper,icon:"Play"})),f&&l.a.createElement("div",{ref:h,className:"poster "+R.a.poster,style:{backgroundImage:"url("+o+")"}})))},H=a("coky"),V=a("Z/Mj"),z=a.n(V),U=function(e){var t,a,o,n,i,r,d,s,c,u,m,p,h,v,f=e.mediaContent,g=e.index,b=e.activeIndex;return l.a.createElement(l.a.Fragment,null,null!==(t=f.html5_video)&&void 0!==t&&t.reference&&null!==(a=f.html5_video)&&void 0!==a&&a.reference[0]?l.a.createElement("div",{className:""+z.a.imageSlide},l.a.createElement(P,{key:"key-media-slider-"+f.id,className:""+z.a.videoContainer,poster:null===(o=f.html5_video.reference[0])||void 0===o||null===(n=o.static_image)||void 0===n?void 0:n.url,mp4:null===(i=f.html5_video.reference[0])||void 0===i||null===(r=i.video)||void 0===r||null===(d=r.file)||void 0===d?void 0:d.url,webm:null!==(s=f.html5_video.reference[0])&&void 0!==s&&s.alternate_videos&&(null===(c=f.html5_video.reference[0])||void 0===c?void 0:c.alternate_videos.length)>0?null===(u=f.html5_video.reference[0])||void 0===u||null===(m=u.alternate_videos[0])||void 0===m||null===(p=m.file)||void 0===p?void 0:p.url:"",active:g===b})):f.youtube_video.youtube_url?l.a.createElement("div",{className:""+z.a.youtubeContainer},l.a.createElement(H.a,{className:""+z.a.youtubeVideo,src:g===b?"https://www.youtube.com/embed/"+f.youtube_video.youtube_url+"?autoplay=0&mute=0&rel=0&modestbranding=1":""})):f.standard_media.media_asset.url?l.a.createElement("div",{key:f.id,className:""+z.a.imageSlide},l.a.createElement("div",{className:z.a.imageContainer,style:{backgroundImage:"url("+(null===(h=f.standard_media)||void 0===h||null===(v=h.media_asset)||void 0===v?void 0:v.url)+")"}})):null)},Z=a("Xq0S"),q=a.n(Z),K=function(e){var t,a,o,i,d,s,c,u,m,p,h,v,g,b,E,w,S,M,C,_,T,N,O=e.startingSelectedMedia,j=e.mediaList,I=e.onCloseClick,F=Object(r.b)().t.get("mediaModal"),W=F.downloadTitle,R=F.fileSize,P=F.assetType,H=Object(n.useState)(!0),V=H[0],z=H[1],Z=Object(n.useState)(O||0),K=Z[0],Q=Z[1],X=Object(G.a)(Object(n.useContext)(B.a));Object(L.a)((function(){z(window.innerWidth>=1024)}));var $,J=function(e){var t;return null===(t=/[^.]+$/.exec(e))||void 0===t?void 0:t.toString().toUpperCase()};return l.a.createElement("div",{className:"section "+q.a.mediaSlider},l.a.createElement("div",{className:"sectionWrapper "+q.a.sliderWrapper},l.a.createElement(A.a,{className:q.a.closeButton,onClick:function(){I()},icon:V?"Close":"IconX"}),l.a.createElement(D.a,{className:""+q.a.carousel,setActive:!1,pagination:!1,customCursor:!1,options:{dots:!1,arrows:!0,initialSlide:X?Math.abs(j.length-1-K):K,nextArrow:l.a.createElement(A.a,{icon:"ArrowRight"}),prevArrow:l.a.createElement(A.a,{icon:"ArrowRight"})},onChanged:function(e){var t=X?Math.abs(j.length-1-e):e;Q(t)}},j.map((function(e,t){return l.a.createElement(U,{key:"key-media-slider-"+e.id,mediaContent:e,index:t,activeIndex:K})}))),l.a.createElement("div",{className:q.a.mediaDescriptionContainer+" "+(j.length<2?q.a.contentFullSpace:"")},l.a.createElement("div",{className:q.a.titleWrapper},l.a.createElement(y.a,{className:q.a.mediaLogo,name:($=f[null===(t=j[K].media_category[0])||void 0===t?void 0:t.machine_name],$?$.substr(0,1).toUpperCase()+$.substr(1):$)}),l.a.createElement("h3",{className:"heading-08 bold "+q.a.title},j[K].title)),null!==(a=j[K].html5_video)&&void 0!==a&&a.html5_download||j[K].standard_media.standard_downloadable_asset||j[K].youtube_video.youtube_video_download?l.a.createElement("div",{className:q.a.downloadWrapper},l.a.createElement("p",{className:"copy-03 "+q.a.downloadDetails},l.a.createElement("span",null,P+" "+(null!==(o=j[K].html5_video)&&void 0!==o&&o.html5_download&&null!==(i=j[K].html5_video)&&void 0!==i&&i.reference?J(null===(d=j[K].html5_video)||void 0===d||null===(s=d.reference)||void 0===s||null===(c=s[0])||void 0===c||null===(u=c.video)||void 0===u||null===(m=u.file)||void 0===m?void 0:m.url):J(null===(p=j[K].standard_media.standard_downloadable_asset)||void 0===p?void 0:p.url))),(null===(h=j[K].standard_media.standard_downloadable_asset)||void 0===h?void 0:h.file_size)&&l.a.createElement(l.a.Fragment,null,l.a.createElement("span",{className:q.a.separator},"//"),l.a.createElement("span",null,R," ",x()(parseInt(null===(v=j[K].standard_media.standard_downloadable_asset)||void 0===v?void 0:v.file_size,10))))),l.a.createElement("div",{className:q.a.downloadCta},l.a.createElement(Y.a,{downloadContent:null!==(g=j[K].html5_video)&&void 0!==g&&null!==(b=g.reference)&&void 0!==b&&null!==(E=b[0])&&void 0!==E&&E.video?null===(w=j[K].html5_video)||void 0===w||null===(S=w.reference)||void 0===S||null===(M=S[0])||void 0===M||null===(C=M.video)||void 0===C||null===(_=C.file)||void 0===_?void 0:_.url:null===(T=j[K].standard_media)||void 0===T||null===(N=T.standard_downloadable_asset)||void 0===N?void 0:N.url,className:q.a.downloadMediaFont,label:W,onClick:function(e){e.currentTarget.dataset.downloadContent&&k()({url:e.currentTarget.dataset.downloadContent,method:"GET",responseType:"blob"}).then((function(e){var t,a=e.config,o=e.data,n=a.url||"",l=n.substring(n.lastIndexOf("/")+1);if(null!==(t=window.navigator)&&void 0!==t&&t.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(o,l);else{var i=window.URL.createObjectURL(new Blob([o])),r=document.createElement("a");r.href=i,r.setAttribute("download",l),document.body.appendChild(r),r.click(),window.URL.revokeObjectURL(i),r.remove()}}))}}),l.a.createElement(y.a,{className:q.a.downloadArrow,name:"ArrowRightLong"}))):null)))},Q=a("8kPk"),X=a("KDis"),$=a("WcHW"),J=a("dcjH"),ee=a.n(J);t.default=function(e){var t=e.pageContext,a=t.category,o=t.parentTag,i=t.childTag,r=t.bcp47locale,d=e.data,s=d.allContentstackMediaList.nodes[0],c=d.allContentstackMedia.nodes,u=e.navigate,m=Object(I.a)()[1].setModalActiveState,p=Object(n.useState)(0),v=p[0],f=p[1],g=Object(n.useCallback)((function(e){f(c.findIndex((function(t){return t===e}))),m(!0)}),[c]),b=Object(n.useCallback)((function(){m(!1)}),[]),y=function(e,t,a){return void 0===e&&(e="all"),u("/"+r+"/"+$.b.get($.a.MEDIA)+"/"+[e,t,a].filter((function(e){return void 0!==e})).join("/"),{state:{preventScroll:!0}})},E=Object(n.useCallback)((function(e){y(e,o,i)}),[s,c,o,i]),w=Object(n.useCallback)((function(e){y(a,e,void 0)}),[s,c,a,i]),S=Object(n.useCallback)((function(e){y(a,o,e)}),[s,c,a,o]);return l.a.createElement(l.a.Fragment,null,l.a.createElement(h,{categories:s.filter_categories,tags:s.dropdown,onCategorySelect:E,onTagParentSelect:w,onTagChildSelect:S,selectedCategory:a,selectedTag:o||"all",selectedTagValue:i||"all",testId:"mediapage-filter"}),l.a.createElement("section",{className:"section light "+ee.a.mediaGallery,"data-testid":"mediapage-gallery"},l.a.createElement("div",{className:"sectionWrapper"},l.a.createElement(N,{media:c,handleCardClick:g}))),l.a.createElement(Q.a,{type:X.a.MEDIA,includeCloseButton:!1},l.a.createElement(K,{startingSelectedMedia:v,mediaList:c,onCloseClick:b})))}},Xq0S:function(e,t,a){e.exports={mediaSlider:"MediaSlider-module--mediaSlider--Lv9oW",sliderWrapper:"MediaSlider-module--sliderWrapper--2AO0A",downloadArrow:"MediaSlider-module--downloadArrow--i80OQ",carousel:"MediaSlider-module--carousel--R09rD",closeButton:"MediaSlider-module--closeButton--3rq1E",mediaDescriptionContainer:"MediaSlider-module--mediaDescriptionContainer--2ZATH",titleWrapper:"MediaSlider-module--titleWrapper--1sEr2",title:"MediaSlider-module--title--1eQ5E",mediaLogo:"MediaSlider-module--mediaLogo--2fBA5",downloadWrapper:"MediaSlider-module--downloadWrapper--3e9G2",downloadCta:"MediaSlider-module--downloadCta--tLcWD",downloadDetails:"MediaSlider-module--downloadDetails--zxSTp",separator:"MediaSlider-module--separator--2SNpN",downloadMediaFont:"MediaSlider-module--downloadMediaFont--1UALh",contentFullSpace:"MediaSlider-module--contentFullSpace--2FBK9"}},YU3G:function(e,t,a){"use strict";var o=a("Wbzz"),n=a("q1tI"),l=a.n(n),i=a("ahjx"),r=a("c++0"),d=a.n(r);t.a=function(e){var t=e.href,a=e.to,n=e.downloadContent,r=e.onClick,s=e.className,c=e.icon,u=e.label,m=e.inverted,p=void 0!==m&&m,h=e.testId,v=s+" "+d.a.textButton+" button "+(p?d.a.inverted:""),f=l.a.createElement(l.a.Fragment,null,u&&l.a.createElement("p",{className:"heading-06 "+d.a.label},u),c&&l.a.createElement(i.a,{className:d.a.icon,name:c}));return a?l.a.createElement(o.a,{to:a,onClick:r,className:v,"data-icon":c,"data-testid":h},f):t?l.a.createElement("a",{href:t,onClick:r,className:v,"data-icon":c,target:"_blank",rel:"noopener noreferrer","data-testid":h},f):n?l.a.createElement("button",{"data-download-content":n,className:v,"data-icon":c,onClick:r,"data-testid":h},f):l.a.createElement("button",{className:v,"data-icon":c,onClick:r,"data-testid":h},f)}},"Z/Mj":function(e,t,a){e.exports={imageSlide:"MediaSliderContent-module--imageSlide--bWxTj",imageContainer:"MediaSliderContent-module--imageContainer--2BQx2",youtubeContainer:"MediaSliderContent-module--youtubeContainer--2izaa",youtubeVideo:"MediaSliderContent-module--youtubeVideo--XoDyj",videoContainer:"MediaSliderContent-module--videoContainer--1PonI"}},"c++0":function(e,t,a){e.exports={icon:"TextButton-module--icon--113jU",textButton:"TextButton-module--textButton--2wm3K",inverted:"TextButton-module--inverted--2pAHM",label:"TextButton-module--label--tblRt"}},c6d8:function(e,t,a){e.exports={mediaCard:"MediaCard-module--mediaCard--lVaWA",image:"MediaCard-module--image--PHeeU",iconWrapper:"MediaCard-module--iconWrapper--1C98M",titleWrapper:"MediaCard-module--titleWrapper--Nm3wn",icon:"MediaCard-module--icon--3l4-v"}},coky:function(e,t,a){"use strict";var o=a("q1tI"),n=a.n(o),l=a("Qj0e"),i=a.n(l);t.a=function(e){var t=e.src,a=e.title,o=void 0===a?"":a,l=e.className,r=void 0===l?"":l,d=e.isModal,s=void 0!==d&&d,c=e.testId;return n.a.createElement("div",{"data-testid":c,className:"\n      "+r+" \n      "+i.a.youtubeVideo+" \n      "+(s?"modal-content":"")+"\n      "},n.a.createElement("iframe",{src:t,width:"560",height:"315",frameBorder:"0",allow:"autoplay",title:o,"data-testid":c+"-iframe"}))}},dcjH:function(e,t,a){e.exports={mediaGallery:"media-module--mediaGallery--1YjYK",mediaFilter:"media-module--mediaFilter--11T-9",dropdown:"media-module--dropdown--2OEEv"}},"j+VE":function(e,t,a){a("bFeb")},nA08:function(e,t,a){e.exports={mediaSliderVideo:"MediaSliderVideo-module--mediaSliderVideo--1X7fj",playButton:"MediaSliderVideo-module--playButton--2y-pD",iconWrapper:"MediaSliderVideo-module--iconWrapper--3E8ZI",poster:"MediaSliderVideo-module--poster--3DFLk"}},zuWl:function(e,t,a){a("j+VE"),e.exports=function(){"use strict";var e=/^(b|B)$/,t={iec:{bits:["b","Kib","Mib","Gib","Tib","Pib","Eib","Zib","Yib"],bytes:["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]},jedec:{bits:["b","Kb","Mb","Gb","Tb","Pb","Eb","Zb","Yb"],bytes:["B","KB","MB","GB","TB","PB","EB","ZB","YB"]}},a={iec:["","kibi","mebi","gibi","tebi","pebi","exbi","zebi","yobi"],jedec:["","kilo","mega","giga","tera","peta","exa","zetta","yotta"]},o={floor:Math.floor,ceil:Math.ceil};function n(n){var l,i,r,d,s,c,u,m,p,h,v,f,g,b,y,E,w,S,M,C,_,T=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},N=[],O=0;if(isNaN(n))throw new TypeError("Invalid number");if(r=!0===T.bits,y=!0===T.unix,f=!0===T.pad,i=T.base||2,g=void 0!==T.round?T.round:y?1:2,u=void 0!==T.locale?T.locale:"",m=T.localeOptions||{},E=void 0!==T.separator?T.separator:"",w=void 0!==T.spacer?T.spacer:y?"":" ",M=T.symbols||{},S=2===i&&T.standard||"jedec",v=T.output||"string",s=!0===T.fullform,c=T.fullforms instanceof Array?T.fullforms:[],l=void 0!==T.exponent?T.exponent:-1,C=o[T.roundingMethod]||Math.round,p=(h=Number(n))<0,d=i>2?1e3:1024,_=!1===isNaN(T.precision)?parseInt(T.precision,10):0,p&&(h=-h),(-1===l||isNaN(l))&&(l=Math.floor(Math.log(h)/Math.log(d)))<0&&(l=0),l>8&&(_>0&&(_+=8-l),l=8),"exponent"===v)return l;if(0===h)N[0]=0,b=N[1]=y?"":t[S][r?"bits":"bytes"][l];else{O=h/(2===i?Math.pow(2,10*l):Math.pow(1e3,l)),r&&(O*=8)>=d&&l<8&&(O/=d,l++);var k=Math.pow(10,l>0?g:0);N[0]=C(O*k)/k,N[0]===d&&l<8&&void 0===T.exponent&&(N[0]=1,l++),b=N[1]=10===i&&1===l?r?"kb":"kB":t[S][r?"bits":"bytes"][l],y&&(N[1]="jedec"===S?N[1].charAt(0):l>0?N[1].replace(/B$/,""):N[1],e.test(N[1])&&(N[0]=Math.floor(N[0]),N[1]=""))}if(p&&(N[0]=-N[0]),_>0&&(N[0]=N[0].toPrecision(_)),N[1]=M[N[1]]||N[1],!0===u?N[0]=N[0].toLocaleString():u.length>0?N[0]=N[0].toLocaleString(u,m):E.length>0&&(N[0]=N[0].toString().replace(".",E)),f&&!1===Number.isInteger(N[0])&&g>0){var j=E||".",x=N[0].toString().split(j),B=x[1]||"",L=B.length,G=g-L;N[0]="".concat(x[0]).concat(j).concat(B.padEnd(L+G,"0"))}return s&&(N[1]=c[l]?c[l]:a[S][l]+(r?"bit":"byte")+(1===N[0]?"":"s")),"array"===v?N:"object"===v?{value:N[0],symbol:N[1],exponent:l,unit:b}:N.join(w)}return n.partial=function(e){return function(t){return n(t,e)}},n}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,